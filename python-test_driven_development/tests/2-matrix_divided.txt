# Test file for matrix_divided function

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test normal case
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test that original matrix is unchanged
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

# Test with negative divisor
>>> print(matrix_divided(matrix, -3))
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

# Test with float values
>>> matrix = [[1.1, 2.2, 3.3], [4.4, 5.5, 6.6]]
>>> print(matrix_divided(matrix, 2))
[[0.55, 1.1, 1.65], [2.2, 2.75, 3.3]]

# Test with float divisor
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 2.5))
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

# Test division by zero
>>> try:
...     matrix_divided(matrix, 0)
... except ZeroDivisionError as e:
...     print(str(e))
division by zero

# Test with non-number in matrix
>>> try:
...     matrix_divided([[1, 2, 3], [4, "5", 6]], 3)
... except TypeError as e:
...     print(str(e))
matrix must be a matrix (list of lists) of integers/floats

# Test with rows of different sizes
>>> try:
...     matrix_divided([[1, 2, 3], [4, 5]], 2)
... except TypeError as e:
...     print(str(e))
Each row of the matrix must have the same size

# Test with non-number divisor
>>> try:
...     matrix_divided([[1, 2], [3, 4]], "2")
... except TypeError as e:
...     print(str(e))
div must be a number

# Test with infinity
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, float('inf')))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

# Test with negative infinity
>>> print(matrix_divided(matrix, float('-inf')))
[[-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0]]

# Test with missing one argument
>>> try:
...     matrix_divided([[1, 2], [3, 4]])
... except TypeError as e:
...     print(str(e))
matrix_divided() missing 1 required positional argument: 'div'
